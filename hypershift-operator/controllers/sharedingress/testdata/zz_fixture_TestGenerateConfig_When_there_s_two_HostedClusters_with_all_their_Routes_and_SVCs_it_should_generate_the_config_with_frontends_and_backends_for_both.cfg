global
  log stdout local0
  maxconn 20000

defaults
  mode tcp
  log global
  log-format "%ci:%cp -> %fi:%fp [%t] %ft %b/%s %Tw/%Tc/%Tt %B %ts %ac/%fc/%bc/%sc/%rc %sq/%bq"
  option  dontlognull
  retries 3
  timeout http-request 30s
  timeout queue        1m
  timeout connect      10s
  timeout client       86400s
  timeout server       86400s
  timeout tunnel       86400s

# Frontends for the KAS SVCs to support traffic coming from the data plane via kubernetes.svc.
frontend dataplane-kas-svc
  bind :::6443 v4v6 accept-proxy
  tcp-request inspect-delay 5s

  # fc_pp_tlv(0x20) extracts and decodes the custom tlv proxy header sent from the data-pane HAProxy which contains the clusterID.
  tcp-request content set-var(sess.cluster_id) fc_pp_tlv(0x20)
  tcp-request content accept if { req_ssl_hello_type 1 }

  # example output: cluster_id = "4954e6da-fc87-4e74-9861-05895fe9549d", "169.254.169.1":38984 -> "172.20.0.1":6443 [10/Jul/2024:14:02:09.943] "dataplane-kas-svc" "<backend_name>"/"<server_name>" 11/8/90052 3373 -- 25/7/2/2/0 0/0
  # see https://www.haproxy.com/blog/introduction-to-haproxy-logging
  log-format "%{+Q}o\ cluster_id = %[var(sess.cluster_id)], %ci:%cp -> %fi:%fp [%t] %ft %b/%s %Tw/%Tc/%Tt %B %ts %ac/%fc/%bc/%sc/%rc %sq/%bq"
  acl is_test-hc1-kube-apiserver var(sess.cluster_id) -m str hc1-UUID
  use_backend test-hc1-kube-apiserver if is_test-hc1-kube-apiserver

# Frontends for the KAS SVCs to support traffic coming from the data plane via kubernetes.svc through private link.
frontend dataplane-private-link-kas-svc
  bind :::7443 v4v6 accept-proxy
  tcp-request inspect-delay 5s

  # fc_pp_tlv(0xEE),bytes(1) extracts and decodes the custom tlv proxy header sent from the private link service which contains the LinkID.
  tcp-request content set-var(sess.link_id) fc_pp_tlv(0xEE),bytes(1)
  tcp-request content accept if { req_ssl_hello_type 1 }

  # example output: link_id = "96570220" (4-byte hex format), "10.0.0.6":57174 -> "1.2.3.4":7443 [18/Jul/2024:15:55:37.086] "dataplane-private-link-kas-svc" "<backend_name>"/"<server_name>" 2/6/18 3219 -- 63/54/51/51/0 0/0
  # see https://www.haproxy.com/blog/introduction-to-haproxy-logging
  log-format "%{+Q}o\ link_id = %[var(sess.link_id),hex], %ci:%cp -> %fi:%fp [%t] %ft %b/%s %Tw/%Tc/%Tt %B %ts %ac/%fc/%bc/%sc/%rc %sq/%bq"
  acl is_test-hc2-kube-apiserver var(sess.link_id) -m bin dummy-linkID
  use_backend test-hc2-kube-apiserver if is_test-hc2-kube-apiserver

# Frontends support any traffic coming from external DNS.
frontend external-dns
  bind :::8443 v4v6
  tcp-request inspect-delay 5s
  tcp-request content accept if { req_ssl_hello_type 1 }
  acl is_test-hc1-ignition req_ssl_sni -i ignition-server.example.com
  acl is_test-hc1-konnectivity req_ssl_sni -i konnectivity.example.com
  acl is_test-hc1-apiserver req_ssl_sni -i kube-apiserver-public.example.com
  acl is_test-hc1-oauth req_ssl_sni -i oauth-public.example.com
  acl is_test-hc2-ignition req_ssl_sni -i ignition-server.example.com
  acl is_test-hc2-konnectivity req_ssl_sni -i konnectivity.example.com
  acl is_test-hc2-apiserver req_ssl_sni -i kube-apiserver-public.example.com
  acl is_test-hc2-oauth req_ssl_sni -i oauth-public.example.com
  use_backend test-hc1-ignition if is_test-hc1-ignition
  use_backend test-hc1-konnectivity if is_test-hc1-konnectivity
  use_backend test-hc1-apiserver if is_test-hc1-apiserver
  use_backend test-hc1-oauth if is_test-hc1-oauth
  use_backend test-hc2-ignition if is_test-hc2-ignition
  use_backend test-hc2-konnectivity if is_test-hc2-konnectivity
  use_backend test-hc2-apiserver if is_test-hc2-apiserver
  use_backend test-hc2-oauth if is_test-hc2-oauth

listen health_check_http_url
  bind :::9444 v4v6
  mode http
  monitor-uri /haproxy_ready

# Backends for the KAS SVCs to support traffic coming form the data plane via kubernetes.svc.
backend test-hc1-kube-apiserver
  server test-hc1-kube-apiserver 4.4.4.4:6443

# Backends for the KAS SVCs to support traffic coming from the data plane via kubernetes.svc through private link.
backend test-hc2-kube-apiserver
  server test-hc2-kube-apiserver 4.4.4.4:6443

# Backends support any traffic coming from external DNS.
backend test-hc1-ignition
  server test-hc1-ignition 1.1.1.1:443
backend test-hc1-konnectivity
  server test-hc1-konnectivity 2.2.2.2:8091
backend test-hc1-apiserver
  server test-hc1-apiserver 4.4.4.4:6443
backend test-hc1-oauth
  server test-hc1-oauth 3.3.3.3:6443
backend test-hc2-ignition
  server test-hc2-ignition 1.1.1.1:443
backend test-hc2-konnectivity
  server test-hc2-konnectivity 2.2.2.2:8091
backend test-hc2-apiserver
  server test-hc2-apiserver 4.4.4.4:6443
backend test-hc2-oauth
  server test-hc2-oauth 3.3.3.3:6443
